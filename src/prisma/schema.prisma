datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

model User {
  id         String       @id @default(cuid())
  userId     String       @unique
  intakeCode String?
  grouping   String?
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  servers    ServerUser[]
}

model ServerUser {
  id        String   @id @default(cuid())
  serverId  String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  server Server @relation(fields: [serverId], references: [id])
  user   User   @relation(fields: [userId], references: [id])

  @@unique([serverId, userId])
}

model Server {
  id              String    @id @default(cuid())
  serverId        String    @unique
  webhookChannel  String?   // For server-wide announcements
  defaultIntake   String?   // Server-wide default intake code
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  user ServerUser[]
}

model Timetable {
  id         String           @id @default(cuid())
  fetchedAt  DateTime        @default(now())
  validUntil DateTime
  classes    ClassSchedule[]
}

model ClassSchedule {
  id           String    @id @default(cuid())
  intakeCode   String
  moduleCode   String
  moduleName   String
  roomNumber   String
  grouping     String
  startTime    DateTime
  endTime      DateTime
  day          String
  timetableId  String
  timetable    Timetable @relation(fields: [timetableId], references: [id])

  @@index([intakeCode])
  @@index([moduleCode])
  @@index([roomNumber])
  @@index([startTime])
}
